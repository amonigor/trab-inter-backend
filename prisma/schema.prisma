// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Level {
  STARTER
  MEDIUM
  ADVANCED
}

enum ContentType {
  ARCHIVE
  VIDEO
  COURSE
}

enum Status {
  PENDING
  APPROVED
  DENIED
}

enum SuggestionType {
  ALTER
  INSERT
  DELETE
}

model user {
  id         String       @id @default(uuid())
  name       String       @db.VarChar(80)
  username   String       @db.VarChar(50)
  email      String       @db.VarChar(255)
  password   String       @db.VarChar(255)
  Suggestion suggestion[]
  Moderator  moderator[]
}

model category {
  id          String               @id @default(uuid())
  name        String               @db.VarChar(255)
  communities community_category[]
}

model community {
  id          String               @id @default(uuid())
  name        String               @db.VarChar(80)
  description String               @db.LongText
  categories  community_category[]
  Content     content[]
  Moderator   moderator[]
}

model community_category {
  id           String    @default(uuid())
  Category     category  @relation(fields: [id_category], references: [id])
  id_category  String
  Community    community @relation(fields: [id_community], references: [id])
  id_community String

  @@id([id, id_category, id_community])
}

model suggestion {
  id          String               @id @default(uuid())
  description String               @db.LongText
  status      Status               @default(PENDING)
  User        user                 @relation(fields: [id_user], references: [id])
  id_user     String
  Content     suggestion_content[]
}

model content {
  id           String               @id @default(uuid())
  description  String               @db.VarChar(255)
  link         String               @db.VarChar(500)
  value        Decimal              @db.Decimal(10, 2)
  level        Level
  type         ContentType
  status       Status               @default(PENDING)
  Community    community            @relation(fields: [id_community], references: [id])
  id_community String
  Suggestion   suggestion_content[]
}

model suggestion_content {
  id            String         @default(uuid())
  Suggestion    suggestion     @relation(fields: [id_suggestion], references: [id])
  id_suggestion String
  Content       content        @relation(fields: [id_content], references: [id])
  id_content    String
  type          SuggestionType @default(INSERT)

  @@id([id, id_suggestion, id_content])
}

model moderator {
  id           String    @default(uuid())
  User         user      @relation(fields: [id_user], references: [id])
  id_user      String
  Community    community @relation(fields: [id_community], references: [id])
  id_community String

  @@id([id, id_user, id_community])
}
